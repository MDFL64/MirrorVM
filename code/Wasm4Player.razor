@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Sandbox

<root>
	<div class="title">@Title</div>
	<Image Texture=@Wasm4.Screen onmousemove=@HandleMouseMove @ref="DisplayImage" onmousedown=@MouseDown></Image>
	<div class="controls">Controls: Arrows, X, Z, Mouse</div>
	<button class="close" onclick=@Close>Close</button>
</root>

@code
{
	public void Init(string title, string cart_file) {
		Title = title;
		Wasm4 = new Wasm4(cart_file);
	}

	string Title;
	Wasm4 Wasm4;
	Image DisplayImage { get; set; }

	protected override void OnFixedUpdate()
	{
		Wasm4.DoUpdate();
	}

	protected void HandleMouseMove(PanelEvent e) {
		var mouse_event = (MousePanelEvent)e;
		float screen_w = DisplayImage.Box.Rect.Width;

		var pos = mouse_event.LocalPosition * Panel.ScaleFromScreen / screen_w;
		Wasm4.MousePos = pos;
	}

	private int TranslateMouseButton(MouseButtons button)
	{
		return button switch
		{
			MouseButtons.Left => 1,
			MouseButtons.Right => 2,
			MouseButtons.Middle => 4,
			_ => -1
		};
	}

	private void Close()
	{
		Destroy();
	}

	// bound to screen to prevent capturing random clicks
	private void MouseDown(PanelEvent e)
	{
		int button = TranslateMouseButton(((MousePanelEvent)e).MouseButton);
		if (button > 0)
		{
			Wasm4.AddMouseButton(button);
		}
	}

	protected override void OnMouseUp(MousePanelEvent e)
	{
		int button = TranslateMouseButton(e.MouseButton);
		if (button > 0)
		{
			Wasm4.ClearMouseButton(button);
		}
	}
}
